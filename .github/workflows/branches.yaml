name: VÃ©rifier si une issue au statut ouvert, ayant le label "RELEASE_NOTE" existe
on:
  push:
    branches:
      - 'NAVBP-*'
jobs:
  check-release-note-issue:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Get all open issues with label "RELEASE_NOTE"
        id: get_issues
        uses: actions/github-script@v4
        with:
          github-token: ${{ secrets.PGH_TOKEN }}
          script: |
            const { data } = await github.issues.listForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: 'open',
              labels: 'RELEASE_NOTE'
            });
            console.log(JSON.stringify(data));
            core.setOutput('data', JSON.stringify(data));
      - run: echo $ {{steps.get_issues.outputs.data}}
      - name: Create Release-Backlog issue if no open issue exists
        if: steps.get_issues.outputs.data.length == 0
        uses: actions/github-script@v4
        with:
          github-token: ${{ secrets.PGH_TOKEN }}
          script: |
            await github.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: 'Release-Backlog',
              labels: ['RELEASE_NOTE'],
              assignees: [context.actor],
              body: 'This is a new release backlog issue.'
            });
      - name: Update existing issue with branch name if it exists
        if: steps.get_issues.outputs.data.length > 0
        run: |
          const issueNumber = steps.get_issues.outputs.data[0].number;
          const issueBody = steps.get_issues.outputs.data[0].body;
          const branchName = process.env.GITHUB_REF.replace('refs/heads/', '');
          const updatedBody = `${issueBody}\n\nBranch Name Created: ${branchName}`;
          console.log(`::set-output name=issue_number::${issueNumber}`);
          console.log(`::set-output name=updated_body::${updatedBody}`);
      - name: Update issue body with branch name created
        if: steps.get_issues.outputs.data.length > 0
        uses: actions/github-script@v4
        env:
          ISSUE_NUMBER: ${{ steps.check-release-note-issue.outputs.issue_number }}
          UPDATED_BODY: ${{ steps.check-release-note-issue.outputs.updated_body }}
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            await github.issues.update({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: parseInt(process.env.ISSUE_NUMBER),
              body: process.env.UPDATED_BODY
            });
          
